{"ast":null,"code":"var _jsxFileName = \"/Users/katyaminich/Udemy/GraphQL/Projects/JobBoard/client/src/pages/JobPage.js\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { formatDate } from '../lib/formatters';\nimport { jobs } from '../lib/fake-data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobPage() {\n  _s();\n  const {\n    jobId\n  } = useParams();\n  const job = jobs.find(job => job.id === jobId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title is-2\",\n      children: job.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"subtitle is-4\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/companies/${job.company.id}`,\n        children: job.company.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block has-text-grey\",\n        children: [\"Posted: \", formatDate(job.date, 'long')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"block\",\n        children: job.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(JobPage, \"RYbM2IbsRygcke4E4Q4JmnnhYp8=\", false, function () {\n  return [useParams];\n});\n_c = JobPage;\nexport default JobPage;\nvar _c;\n$RefreshReg$(_c, \"JobPage\");","map":{"version":3,"names":["useParams","Link","formatDate","jobs","jsxDEV","_jsxDEV","JobPage","_s","jobId","job","find","id","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","to","company","name","date","description","_c","$RefreshReg$"],"sources":["/Users/katyaminich/Udemy/GraphQL/Projects/JobBoard/client/src/pages/JobPage.js"],"sourcesContent":["import { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { formatDate } from '../lib/formatters';\nimport { jobs } from '../lib/fake-data';\n\nfunction JobPage() {\n  const { jobId } = useParams();\n\n  const job = jobs.find((job) => job.id === jobId);\n  return (\n    <div>\n      <h1 className=\"title is-2\">\n        {job.title}\n      </h1>\n      <h2 className=\"subtitle is-4\">\n        <Link to={`/companies/${job.company.id}`}>\n          {job.company.name}\n        </Link>\n      </h2>\n      <div className=\"box\">\n        <div className=\"block has-text-grey\">\n          Posted: {formatDate(job.date, 'long')}\n        </div>\n        <p className=\"block\">\n          {job.description}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default JobPage;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,cAAc;AACxC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAM,CAAC,GAAGR,SAAS,CAAC,CAAC;EAE7B,MAAMS,GAAG,GAAGN,IAAI,CAACO,IAAI,CAAED,GAAG,IAAKA,GAAG,CAACE,EAAE,KAAKH,KAAK,CAAC;EAChD,oBACEH,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAIQ,SAAS,EAAC,YAAY;MAAAD,QAAA,EACvBH,GAAG,CAACK;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACLb,OAAA;MAAIQ,SAAS,EAAC,eAAe;MAAAD,QAAA,eAC3BP,OAAA,CAACJ,IAAI;QAACkB,EAAE,EAAE,cAAcV,GAAG,CAACW,OAAO,CAACT,EAAE,EAAG;QAAAC,QAAA,EACtCH,GAAG,CAACW,OAAO,CAACC;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACLb,OAAA;MAAKQ,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBP,OAAA;QAAKQ,SAAS,EAAC,qBAAqB;QAAAD,QAAA,GAAC,UAC3B,EAACV,UAAU,CAACO,GAAG,CAACa,IAAI,EAAE,MAAM,CAAC;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACNb,OAAA;QAAGQ,SAAS,EAAC,OAAO;QAAAD,QAAA,EACjBH,GAAG,CAACc;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACX,EAAA,CAxBQD,OAAO;EAAA,QACIN,SAAS;AAAA;AAAAwB,EAAA,GADpBlB,OAAO;AA0BhB,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}