{"ast":null,"code":"// Disclaimer: This example keeps the access token in LocalStorage just because\n// it's simpler, but in a real application you may want to use cookies instead\n// for better security. Also, it doesn't handle token expiration.\nimport { jwtDecode } from 'jwt-decode';\nconst API_URL = 'http://localhost:9000';\nconst ACCESS_TOKEN_KEY = 'accessToken';\nexport function getAccessToken() {\n  return localStorage.getItem(ACCESS_TOKEN_KEY);\n}\nexport async function login(email, password) {\n  const response = await fetch(`${API_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (!response.ok) {\n    return null;\n  }\n  const {\n    token\n  } = await response.json();\n  localStorage.setItem(ACCESS_TOKEN_KEY, token);\n  return getUserFromToken(token);\n}\nexport function getUser() {\n  const token = getAccessToken();\n  if (!token) {\n    return null;\n  }\n  return getUserFromToken(token);\n}\nexport function logout() {\n  localStorage.removeItem(ACCESS_TOKEN_KEY);\n}\nfunction getUserFromToken(token) {\n  const claims = jwtDecode(token);\n  return {\n    id: claims.sub,\n    email: claims.email\n  };\n}","map":{"version":3,"names":["jwtDecode","API_URL","ACCESS_TOKEN_KEY","getAccessToken","localStorage","getItem","login","email","password","response","fetch","method","headers","body","JSON","stringify","ok","token","json","setItem","getUserFromToken","getUser","logout","removeItem","claims","id","sub"],"sources":["/Users/katyaminich/Udemy/GraphQL/Projects/JobBoard/client/src/lib/auth.js"],"sourcesContent":["// Disclaimer: This example keeps the access token in LocalStorage just because\n// it's simpler, but in a real application you may want to use cookies instead\n// for better security. Also, it doesn't handle token expiration.\nimport { jwtDecode } from 'jwt-decode';\n\nconst API_URL = 'http://localhost:9000';\n\nconst ACCESS_TOKEN_KEY = 'accessToken';\n\nexport function getAccessToken() {\n  return localStorage.getItem(ACCESS_TOKEN_KEY);\n}\n\nexport async function login(email, password) {\n  const response = await fetch(`${API_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  });\n  if (!response.ok) {\n    return null;\n  }\n  const { token } = await response.json();\n  localStorage.setItem(ACCESS_TOKEN_KEY, token);\n  return getUserFromToken(token);\n}\n\nexport function getUser() {\n  const token = getAccessToken();\n  if (!token) {\n    return null;\n  }\n  return getUserFromToken(token);\n}\n\nexport function logout() {\n  localStorage.removeItem(ACCESS_TOKEN_KEY);\n}\n\nfunction getUserFromToken(token) {\n  const claims = jwtDecode(token);\n  return {\n    id: claims.sub,\n    email: claims.email,\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,YAAY;AAEtC,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,gBAAgB,GAAG,aAAa;AAEtC,OAAO,SAASC,cAAcA,CAAA,EAAG;EAC/B,OAAOC,YAAY,CAACC,OAAO,CAACH,gBAAgB,CAAC;AAC/C;AAEA,OAAO,eAAeI,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,QAAQ,EAAE;IAC/CU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;EACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,OAAO,IAAI;EACb;EACA,MAAM;IAAEC;EAAM,CAAC,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EACvCd,YAAY,CAACe,OAAO,CAACjB,gBAAgB,EAAEe,KAAK,CAAC;EAC7C,OAAOG,gBAAgB,CAACH,KAAK,CAAC;AAChC;AAEA,OAAO,SAASI,OAAOA,CAAA,EAAG;EACxB,MAAMJ,KAAK,GAAGd,cAAc,CAAC,CAAC;EAC9B,IAAI,CAACc,KAAK,EAAE;IACV,OAAO,IAAI;EACb;EACA,OAAOG,gBAAgB,CAACH,KAAK,CAAC;AAChC;AAEA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACvBlB,YAAY,CAACmB,UAAU,CAACrB,gBAAgB,CAAC;AAC3C;AAEA,SAASkB,gBAAgBA,CAACH,KAAK,EAAE;EAC/B,MAAMO,MAAM,GAAGxB,SAAS,CAACiB,KAAK,CAAC;EAC/B,OAAO;IACLQ,EAAE,EAAED,MAAM,CAACE,GAAG;IACdnB,KAAK,EAAEiB,MAAM,CAACjB;EAChB,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}