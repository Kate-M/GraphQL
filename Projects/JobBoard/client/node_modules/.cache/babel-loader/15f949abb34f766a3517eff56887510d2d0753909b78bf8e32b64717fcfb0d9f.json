{"ast":null,"code":"var _jsxFileName = \"/Users/katyaminich/Udemy/GraphQL/Projects/JobBoard/client/src/components/JobList.js\";\nimport { Link } from 'react-router-dom';\nimport { formatDate } from '../lib/formatters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobList({\n  jobs\n}) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"box\",\n    children: jobs.map(job => /*#__PURE__*/_jsxDEV(JobItem, {\n      job: job\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = JobList;\nfunction JobItem({\n  job\n}) {\n  const title = job.company ? `${job.title} at ${job.company.name}` : job.title;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"media\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-left has-text-grey\",\n      children: formatDate(job.date)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-content\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/jobs/${job.id}`,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c2 = JobItem;\nexport default JobList;\nvar _c, _c2;\n$RefreshReg$(_c, \"JobList\");\n$RefreshReg$(_c2, \"JobItem\");","map":{"version":3,"names":["Link","formatDate","jsxDEV","_jsxDEV","JobList","jobs","className","children","map","job","JobItem","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","title","company","name","date","to","_c2","$RefreshReg$"],"sources":["/Users/katyaminich/Udemy/GraphQL/Projects/JobBoard/client/src/components/JobList.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { formatDate } from '../lib/formatters';\n\nfunction JobList({ jobs }) {\n  return (\n    <ul className=\"box\">\n      {jobs.map((job) => (\n        <JobItem key={job.id} job={job} />\n      ))}\n    </ul>\n  );\n}\n\nfunction JobItem({ job }) {\n  const title = job.company\n    ? `${job.title} at ${job.company.name}`\n    : job.title;\n  return (\n    <li className=\"media\">\n      <div className=\"media-left has-text-grey\">\n        {formatDate(job.date)}\n      </div>\n      <div className=\"media-content\">\n        <Link to={`/jobs/${job.id}`}>\n          {title}\n        </Link>\n      </div>\n    </li>\n  );\n}\n\nexport default JobList;\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,OAAOA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACzB,oBACEF,OAAA;IAAIG,SAAS,EAAC,KAAK;IAAAC,QAAA,EAChBF,IAAI,CAACG,GAAG,CAAEC,GAAG,iBACZN,OAAA,CAACO,OAAO;MAAcD,GAAG,EAAEA;IAAI,GAAjBA,GAAG,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAACC,EAAA,GARQZ,OAAO;AAUhB,SAASM,OAAOA,CAAC;EAAED;AAAI,CAAC,EAAE;EACxB,MAAMQ,KAAK,GAAGR,GAAG,CAACS,OAAO,GACrB,GAAGT,GAAG,CAACQ,KAAK,OAAOR,GAAG,CAACS,OAAO,CAACC,IAAI,EAAE,GACrCV,GAAG,CAACQ,KAAK;EACb,oBACEd,OAAA;IAAIG,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACnBJ,OAAA;MAAKG,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EACtCN,UAAU,CAACQ,GAAG,CAACW,IAAI;IAAC;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACNZ,OAAA;MAAKG,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BJ,OAAA,CAACH,IAAI;QAACqB,EAAE,EAAE,SAASZ,GAAG,CAACE,EAAE,EAAG;QAAAJ,QAAA,EACzBU;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAET;AAACO,GAAA,GAhBQZ,OAAO;AAkBhB,eAAeN,OAAO;AAAC,IAAAY,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}